#!/bin/bash

YAML_FILES_DIRECTORY="$PWD/tool-codes/yaml-files"

SEC_NAMESPACE="sec"
PVC_NAME="scan-results-pvc"

kubectl create ns $SEC_NAMESPACE

kubectl apply -f $YAML_FILES_DIRECTORY/cluster-scanner-clusterrole.yaml

kubectl apply -f $YAML_FILES_DIRECTORY/cluster-scanner-clusterrolebinding.yaml

kubectl apply -f $YAML_FILES_DIRECTORY/cluster-scanner-rbac.yaml

kubectl apply -f $YAML_FILES_DIRECTORY/cluster-scanner-role.yaml

kubectl apply -f $YAML_FILES_DIRECTORY/cluster-scanner-rolebinding.yaml

kubectl apply -f $YAML_FILES_DIRECTORY/scanner-sa.yaml

kubectl apply -f $YAML_FILES_DIRECTORY/pvc.yaml

# Wait for the PV and PVC to be bound
while [[ $(kubectl get pvc $PVC_NAME -o 'jsonpath={..status.phase}') != "Bound" ]]; do
  echo "Waiting for PV/PVC to be bound..."
  sleep 1
done


kubectl apply -f $YAML_FILES_DIRECTORY/job-list-role.yaml

kubectl apply -f $YAML_FILES_DIRECTORY/job-list-role-binding.yaml

kubectl apply -f $YAML_FILES_DIRECTORY/read-pod-logs-role.yaml

kubectl apply -f $YAML_FILES_DIRECTORY/bind-read-pod-logs-role.yaml

kubectl apply -f $YAML_FILES_DIRECTORY/cluster-scanner-cronjob.yaml

kubectl apply -f $YAML_FILES_DIRECTORY/result-access-pod.yaml

kubectl apply -f $YAML_FILES_DIRECTORY/kube-bench-control-plane.yaml

kubectl apply -f $YAML_FILES_DIRECTORY/kube-bench-node.yaml

kubectl apply -f $YAML_FILES_DIRECTORY/scanner-sa.yaml

kubectl apply -f $YAML_FILES_DIRECTORY/deployment.yaml
