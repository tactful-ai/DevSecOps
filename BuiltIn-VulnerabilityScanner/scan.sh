#!/bin/sh

# Function to print a message with timestamp
print_with_timestamp() {
    echo "$(date -u +"%Y-%m-%dT%H:%M:%SZ") $1"
}

# Install kubectl if not present
if ! command -v kubectl &> /dev/null; then
    print_with_timestamp "kubectl not found, installing..."
    wget -O /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v1.22.2/bin/linux/amd64/kubectl
    chmod +x /usr/local/bin/kubectl
fi

print_with_timestamp "Cluster scan started."

# Iterate through all namespaces
for ns in $(kubectl get namespaces -o=jsonpath='{.items[*].metadata.name}'); do
    print_with_timestamp "Scanning namespace: $ns"

    # Iterate through deployments in the namespace
    for deployment in $(kubectl get deployments -n $ns -o=jsonpath='{.items[*].metadata.name}'); do
        print_with_timestamp "Scanning deployment: $deployment"

        # Run vulnerability scan using Trivy
        trivy_image=$(kubectl get deployment $deployment -n $ns -o=jsonpath='{.spec.template.spec.containers[0].image}')
        trivy_results="/app/scan-results/${ns}_${deployment}_$(date -u +"%Y%m%d%H%M%S")_trivy-results.json"
        trivy image --cache-dir /tmp/trivy --format json -o $trivy_results $trivy_image

        # Run kube-bench
        kube_bench_results="/app/scan-results/${ns}_${deployment}_$(date -u +"%Y%m%d%H%M%S")_kube-bench-results.json"
        ./kube-bench > $kube_bench_results

        # Run kube-hunter
        kube_hunter_results="/app/scan-results/${ns}_${deployment}_$(date -u +"%Y%m%d%H%M%S")_kube-hunter-results.json"
        ./kube-hunter --remote > $kube_hunter_results

        # Run kubescape
        kubescape_results="/app/scan-results/${ns}_${deployment}_$(date -u +"%Y%m%d%H%M%S")_kubescape-results.json"
        ./kubescape scan framework nsa -o $kubescape_results

        print_with_timestamp "Scanning completed for deployment: $deployment"
    done
done

print_with_timestamp "Cluster scan completed."

